@using System.Diagnostics.CodeAnalysis

<div class="@(!Node.IsExpanded?"custom-node":"custom-node-extended")">
    <div class="card @Node.CssClass">
        @if (!Node.IsExpanded)
        {
            <div class="card-header">
                <div class=" float-end">
                    @if (Node.IsContainer)
                    {
                        <a href="" class="card-link" @onclick="@open" @onclick:preventDefault>
                            <span class="oi oi-fullscreen-enter" @onclick="@open" aria-hidden="true"></span>
                        </a>
                    }
                    else
                    {
                        <a href="" class="card-link" @onclick="@expand" @onclick:preventDefault>
                            <span class="oi oi-pencil" aria-hidden="true"></span>
                        </a>
                    }
                    <a href="" class="card-link link-danger" @onclick="@delete" @onclick:preventDefault>
                        <span class="oi oi-circle-x" aria-hidden="true"></span>
                    </a>
                </div>
            </div>
            <div class="card-body">
                <h5 class="card-title">@Node.Text</h5>
            </div>
        }
        else
        {
            <div class="card-header">
                <div class=" float-end">
                    <a href="" class="card-link" @onclick="@collapce" @onclick:preventDefault>
                        <span class="oi oi-circle-check" aria-hidden="true"></span>
                    </a>
                </div>
            </div>
            <div class="card-body">
                <form>
                    <div class="mb-3">
                        <label for="displayName" class="form-label">Display name</label>
                        <input type="text" class="form-control" id="displayName" @bind-value="Node.Text"
                        placeholder="Input activity display name" @onmousedown:stopPropagation
                        @onmouseup:stopPropagation @onmousemove:stopPropagation />
                    </div>
                    @Edit
                </form>
            </div>
        }

        @foreach (var port in Node.Ports)
        {
            var portClass = port.Locked ? "locked" : "unlocked";
            <PortRenderer Port="port" Class="@portClass"></PortRenderer>
        }
    </div>

</div>

@code {
    [CascadingParameter]
    public Service Service { get; set; } = default!;

    [Parameter]
    public Activity.DefaultNode Node { get; set; } = default!;

    [Parameter, AllowNull]
    public RenderFragment? Edit { get; set; }

    void open()
    {
        Service.Open(Node);
    }
    void expand()
    {
        Node.IsExpanded = true;
    }
    void collapce()
    {
        Node.IsExpanded = false;
    }
    void delete()
    {
        Service.Delete(Node);
    }
}